
-- 1. Написать команды создания таблиц заданной схемы с указанием необходимых ключей и ограничений. 
-- Все ограничения должны быть именованными (для первичных ключей имена должны начинаться с префикса "PK_", для вторичного ключа – "FK_", проверки - "CH_"). Ограничения:
-- Размер бюджета не может быть отрицательным.
-- Заседание не могут проходить с полуночи до 6 утра.
-- Значение null допустимо только в полях Телефон дом и адрес.

-- члены городского совета
CREATE TABLE "Члены городского совета"
(
	"ID Члена ГС" INTEGER, 
	"ФИО" VARCHAR NOT NULL, 
	"Адрес" VARCHAR, 
	"Телефон раб" VARCHAR NOT NULL, 
	"Телефон дом" VARCHAR, 
	CONSTRAINT pk_members_city_advice PRIMARY KEY ("ID Члена ГС")
);

-- комиссии
CREATE TABLE "Комиссии"
(
	"ID Комиссии" INTEGER NOT NULL, 
	"ID Председателя" INTEGER NOT NULL,
	"Название" VARCHAR NOT NULL, 
	"Бюджет" numeric NOT NULL, 
	CONSTRAINT pk_commissiON PRIMARY KEY ("ID Комиссии"),
	CONSTRAINT fk_commissiON_members_city_advice FOREIGN KEY ("ID Председателя") REFERENCES "Члены городского совета" ("ID Члена ГС"),
	CONSTRAINT ch_commissiON CHECK ("Бюджет" >= 0)
);

-- члены комиссии
CREATE TABLE "Члены комиссии"
(
	"ID Члена ГС" INTEGER, 
	"ID Комиссии" INTEGER, 
	CONSTRAINT pk_members_commissiON PRIMARY KEY ("ID Члена ГС", "ID Комиссии"),
	CONSTRAINT fk_members_commissiON_members_city_advice FOREIGN KEY ("ID Члена ГС") REFERENCES "Члены городского совета" ("ID Члена ГС"),
	CONSTRAINT fk_members_commissiON FOREIGN KEY ("ID Комиссии") REFERENCES "Комиссии" ("ID Комиссии")
);

-- заседания
CREATE TABLE "Заседания"
(
	"ID Заседания" INTEGER NOT NULL, 
	"ID Комиссии" INTEGER NOT NULL, 
	"ID Ответственного" INTEGER NOT NULL, 
	"Дата и время проведения" timestamp NOT NULL, 
	"Место" VARCHAR NOT NULL, 
	CONSTRAINT pk_meetings PRIMARY KEY ("ID Заседания"),
	CONSTRAINT fk_meetings_commissiON FOREIGN KEY ("ID Комиссии") REFERENCES Комиссии ("ID Комиссии"),
	CONSTRAINT fk_meetings_members_city_advice FOREIGN KEY ("ID Ответственного") REFERENCES "Члены городского совета" ("ID Члена ГС"),
	CONSTRAINT ch_meetings CHECK (to_char("Дата и время проведения",'hh24:mi:ss') >= '06:00:00')
);

--------------------------------------------------------------------------------------------------------

-- 2. Заполнить созданные таблицы данными, 5-10 записей для каждой таблицы.

INSERT INTO "Члены городского совета"("ID Члена ГС", "ФИО", "Адрес", "Телефон раб", "Телефон дом") VALUES(1, 'Лысенко Михаил Иванович', 'г.Томск, Фрунзе, д.20, кв.25', '89532405125', null),
(2, 'Петрова Дарья Сергеевна', 'г.Томск, Красноармейская, д.15, кв.21', '89062452312', '9991000'),
(3, 'Виноградов Дмитрий Валерьевич', 'г.Северск, Ленина, д.21, кв.105', '89341282458', '348921'),
(4, 'Угаров Виктор Михайлович', 'г.Томск, Иркутский тракт, д.25, кв.6', '89064585863', null),
(5, 'Логинов Сергей Николаевич', 'г.Северск, Киевская, д.63, кв.1', '89064965704', null),
(6, 'Токарева Елена Владимировна', 'г.Томск, Гоголя, д.17, кв.86', '89061081985', '959150'),
(7, 'Владимирова Ольга Викторовна', 'г.Томск, Ленина, д.155, кв.26', '89617592906', '964100'),
(8, 'Оленников Михаил Константинович', 'г.Томск, Нахимова, д.1, кв.100', '89231582003', null),
(9, 'Герасимов Александр Викторович', 'г.Северск, Горная, д.89, кв.89', '895352900679', '999999'),
(10, 'Зиганшина Лилия Евгеньевна', 'г.Томск, Киевская, д.3, кв.1', '89997508888', '123403'),
(11, 'Зуева Лилия Николаевна', 'г. Томск, Нахимова, д.21, кв.4', '899943306663', '999200');

INSERT INTO "Комиссии"("ID Комиссии", "ID Председателя", "Название", "Бюджет") VALUES(1, 4, 'Палата№1', 12500000),
(2, 5, 'Избирательная', 16550000),
(3, 2, 'Счетная', 140432),
(4, 9, 'Приемная', 1890009900),
(5, 4, 'Палата№2', 550100);

INSERT INTO "Члены комиссии"("ID Члена ГС", "ID Комиссии") VALUES(7, 2),
(6, 3),
(8, 2),
(2, 5),
(4, 1),
(10, 4),
(1, 2),
(3, 3),
(6, 1),
(6, 4);

INSERT INTO "Заседания"("ID Заседания", "ID Комиссии", "ID Ответственного", "Дата и время проведения", "Место") VALUES(1, 2, 9, to_timestamp('2021-08-09 18:30:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Фрунзе, д.17, каб.16'),
(2, 4, 1, to_timestamp('2021-04-03 12:30:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Красноармейская, д.1, ауд.228'),
(3, 1, 9, to_timestamp('2021-02-23 20:30:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Северск, Горная, д.8, каб.1180'),
(4, 4, 3, to_timestamp('2021-01-03 12:00:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Иркутский тракт, д.1, ауд.228'),
(5, 1, 2, to_timestamp('2020-07-11 11:15:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Северск, Ленина, д.119, каб.42'),
(6, 5, 1, to_timestamp('2021-12-10 21:00:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Северск, Нахимова, д.8, каб.1180'),
(7, 2, 6, to_timestamp('2020-12-12 10:00:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Школьная, д.1, ауд.228'),
(8, 3, 4, to_timestamp('2020-05-14 15:00:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Сибирская, д.17, каб.16'),
(9, 5, 4, to_timestamp('2021-05-25 18:00:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Ленина, д.17, каб.16'),
(10, 1, 9, to_timestamp('2021-11-20 09:00:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Федора лыткина, д.17, каб.16'),
(11, 4, 9, to_timestamp('2021-03-19 10:00:00', 'YYYY-MM-DD hh24:mi:ss'), 'г. Томск, Ленина, д.17, каб.16');

/*3. Написать запросы. Устранить дублирование только для тех случаев, где это потенциально возможно.

3.1. Вывести сведения о членах городского совета, не указавших домашний номер телефона и проживающих вне Томска. Результат упорядочить по ФИО.*/

SELECT * FROM "Члены городского совета"
WHERE lower("Адрес") not like '%томск%' AND "Телефон дом" is null;

-- 3.2. Вывести председателей комиссий, бюджет которых больше 500 000. В выборке должны присутствовать только следующие поля: ФИО председателя, название комиссии, бюджет. Результат упорядочить по ФИО.

SELECT "ФИО", "Название", "Бюджет" FROM "Комиссии"
JOIN "Члены городского совета" ON "ID Председателя" = "ID Члена ГС"
WHERE "Бюджет" > 500000;

-- 3.3. Для каждого члена городского совета найти число комиссий, в которых он работает, число комиссии, в которых он является ответственным, среднее число заседаний в месяц.

with t1 AS
(
	SELECT "Члены городского совета"."ID Члена ГС", "Члены комиссии"."ID Комиссии" AS id_m_comis, "Комиссии"."ID Комиссии" AS id_comis, "ID Заседания", "Дата и время проведения"
	FROM "Члены городского совета"
	LEFT JOIN "Члены комиссии" ON "Члены комиссии"."ID Члена ГС" = "Члены городского совета"."ID Члена ГС"
	LEFT JOIN "Комиссии" ON "Комиссии"."ID Председателя" = "Члены городского совета"."ID Члена ГС"
	LEFT JOIN "Заседания" ON "Заседания"."ID Комиссии" = "Члены комиссии"."ID Комиссии"
)
, t2 AS
(
SELECT DISTINCT "ID Члена ГС", AVG(COUNT(DISTINCT "ID Заседания")) over (PARTITION BY "ID Члена ГС") AS avg_meetings
FROM t1
GROUP BY "ID Члена ГС", to_char("Дата и время проведения", 'YYYY-MM')
)
SELECT t1."ID Члена ГС", COUNT(DISTINCT id_m_comis) AS "Комиссии", COUNT(DISTINCT id_comis) AS manager, ROUND(avg_meetings,3)::integer AS "Cреднее число заседаний в месяц"
FROM t1 JOIN t2 ON t2."ID Члена ГС" = t1."ID Члена ГС"
GROUP BY t1."ID Члена ГС", avg_meetings;

-- 3.4. Сформировать статистику заседаний комиссий по месяцам. Исключить комиссии с бюджетом менее 50 000 и числом членов менее трёх. В выборке должны присутствовать следующие поля: месяц (месяц и год), количество заседаний, бюджет, число членов.

SELECT to_char("Дата и время проведения", 'YYYY-MM') AS MONTH, COUNT("ID Заседания") AS "Заседания", "Бюджет", COUNT("ID Члена ГС") AS "Число_Членов_городского_совета"
FROM "Комиссии" JOIN "Заседания" ON "Комиссии"."ID Комиссии" = "Заседания"."ID Комиссии"
	JOIN "Члены комиссии" ON "Комиссии"."ID Комиссии" = "Члены комиссии"."ID Комиссии"
WHERE "Бюджет" >= 50000
GROUP BY to_char("Дата и время проведения", 'YYYY-MM'), "Бюджет";

-- 3.5. Выбрать месяца, в которые заседания проходят чаще среднего.

with t AS
(
	SELECT to_char(to_date(EXTRACT(MONTH FROM "Дата и время проведения")::text, 'mm'), 'TMMonth') AS MONTH, COUNT(*) AS count_, AVG(COUNT(*)) over () AS avg_counts
	FROM "Заседания"
	GROUP BY EXTRACT(MONTH FROM "Дата и время проведения")
)
SELECT MONTH,count_
FROM t
WHERE count_ > avg_counts;

-- 3.6. Вывести ФИО членов горсовета, которые не участвуют ни в одной комиссии, в роли простого сотрудника.

SELECT DISTINCT "ФИО"
FROM "Члены городского совета"
	LEFT JOIN "Комиссии" ON "Члены городского совета"."ID Члена ГС" = "ID Председателя"
	LEFT JOIN "Члены комиссии" ON "Члены городского совета"."ID Члена ГС" = "Члены комиссии"."ID Члена ГС"
WHERE "Комиссии"."ID Комиссии" IS NOT null OR "Члены комиссии"."ID Комиссии" IS null;

-- 4. Написать запросы на изменение данных.

-- 4.1. Увеличить бюджет на 10% тех комиссий, которые чаще всего проводили заседания.

UPDATE "Комиссии"
SET "Бюджет" = "Бюджет" * 1.1
WHERE EXISTS (
	with t AS
	(
		SELECT "ID Комиссии", RANK() OVER(ORDER BY COUNT(*)) AS numer
		FROM "Заседания"
		GROUP BY "ID Комиссии"
	)
	SELECT
	FROM t
	WHERE "Комиссии"."ID Комиссии" = t."ID Комиссии" AND numer = 1
);

-- 4.2. Удалить информацию о всех членах городского совета, которые не участвуют ни в одной комиссии ни в каком качестве.

DELETE FROM "Члены городского совета"
WHERE EXISTS
(
	SELECT
	FROM "Члены городского совета" members
		LEFT JOIN "Комиссии" ON members."ID Члена ГС" = "ID Председателя"
		LEFT JOIN "Члены комиссии" ON members."ID Члена ГС" = "Члены комиссии"."ID Члена ГС"
	WHERE members."ID Члена ГС" = "Члены городского совета"."ID Члена ГС" AND "Члены комиссии"."ID Комиссии" IS null AND "Комиссии"."ID Комиссии" IS null
);

-- 5. Создать представления.

-- 5.1. Оформить запросы 3.5 - 3.6 в виде представления.

CREATE VIEW v_3_5 AS
with t AS
(
	SELECT to_char(to_date(EXTRACT(MONTH FROM "Дата и время проведения")::text, 'mm'), 'TMMonth') AS MONTH, COUNT(*) AS count_, AVG(COUNT(*)) over () AS avg_counts
	FROM "Заседания"
	GROUP BY EXTRACT(MONTH FROM "Дата и время проведения")
)
SELECT MONTH,count_
FROM t
WHERE count_ > avg_counts;

CREATE VIEW v_3_6 AS
SELECT DISTINCT "ФИО"
FROM "Члены городского совета"
	LEFT JOIN "Комиссии" ON "ID Председателя" = "Члены городского совета"."ID Члена ГС"
	LEFT JOIN "Члены комиссии" ON "Члены комиссии"."ID Члена ГС" = "Члены городского совета"."ID Члена ГС"
WHERE "Члены комиссии"."ID Комиссии" IS null OR "Комиссии"."ID Комиссии" IS NOT null;

-- 5.2. Создать представление со следующими полями: ID Комиссии, ФИО ответственного, число членов, число заседаний, бюджет.

CREATE VIEW v_5_2 AS
SELECT "Комиссии"."ID Комиссии", "ФИО", COUNT(DISTINCT "Члены комиссии"."ID Члена ГС") AS "Члены городского совета", COUNT(DISTINCT "ID Ответственного") AS "Заседания", "Бюджет"
FROM "Комиссии"
JOIN "Члены городского совета" ON "Комиссии"."ID Председателя" = "Члены городского совета"."ID Члена ГС"
JOIN "Заседания" ON "Комиссии"."ID Комиссии" = "Заседания"."ID Комиссии"
JOIN "Члены комиссии" ON "Комиссии"."ID Комиссии" = "Члены комиссии"."ID Комиссии"
GROUP BY "Комиссии"."ID Комиссии", "ФИО", "Бюджет";


---------------------------------

DROP VIEW v_3_5;
DROP VIEW v_3_6;
DROP VIEW v_5_2;
DROP TABLE "Заседания";
DROP TABLE "Члены комиссии";
DROP TABLE "Комиссии";
DROP TABLE "Члены городского совета";
